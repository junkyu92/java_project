1. 배열을 사용하는 경우 2가지(조건2가지)
- 배열에 들어갈 데이터가 같은 형태여야하고 배열의 크기를 정해야한다.

2.int[ ] n = new int[5];
  배열명과, 배열의 크기는?
- n, 5

3.2차원 배열 int[][] n = new int[3][10]; 
  배열로 선언된 int변수는 무엇이 들어있는가?
  n에 들어있는 것은?
- 값, 0
- 주소
  
4. 변수에 들어갈 수 있는 2가지를 비교 설명
- 값, 기본형데이터는 값을 변수에 바로 대입할 수 있다.
- 주소, 기본형데이터가 아닐 경우 변수에 주소를 대입한다.

5. 변수에 들어갈 수 있는 것에 따라 변수를 구분하여 설명
- 값, 기본형데이터는 값을 변수에 바로 대입할 수 있다.	(기본형변수)
- 주소, 기본형데이터가 아닐 경우 변수에 주소를 대입한다.(참조형변수)

6. String클래스에 대해 설명
- 각각의 캐릭터들을 묶어서 저장 후 주소로 이용한다. 

7. switch문안에 들어갈 수 있는 데이타 타입 
- 실수형을 제외한 정수, 캐릭터, 스트링, 

8. 2차원 배열에서 String[][] s = new String[2][3];
   length 변수의 개수와 설명
- 3개. 2개의 행의 크기와 1개의 열의 개수
   
9. 배열의 얕은 복사와 깊은 복사의 차이
- 얕은 복사의 경우 배열의 주소를 복사해오기 때문에 원본의 값이 변할 경우 복사본의 값이 함께 변한다.
- 깊은 복사의 경우 배열의 데이터를 복사해오기 때문에 원본에 상관없이 독립된 새로운 배열이 생성된다.

10. 배열의 얕은 복사를 하면 생기는 문제
- 배열의 주소를 복사해오기 때문에 원본의 값이 변할 경우 복사본의 값이 함께 변한다.

11. 기본형과 참조형인 변수인 경우 초기값은 어떻게 설정되는가?
- 기본형은 int = 0, double = 0.0, char = ' ', boolean = false
- 참조형은 null

12. final int KEY = 1000;의 의미, final은 어떤 의미가 있는가?
- 값을 고정시키는 것으로 KEY라는 변수는 1000으로 고정된다.
- 상수

13. array와 arraylist의 차이점
- array는 크기와 타입이 정해져있고 arraylist는 모든 객체를 입력 가능하고 크기가 동적이다

14. array와 arraylist의 길이를 구하는 방법
- array.length 변수사용
- arraylist.size()

15. String의 길이를 구하는 방법
- .length()

16. String s = "안녕하세요! 반갑습니다!"; 에서 
     '안'을 추출
- System.out.println(s.charAt(0));
     "반갑"을 추출
- System.out.println(s.substring(7, 9));	
     
17. 콘솔에서 입력받을 때 자주 사용하는 클래스의 객체 생성방법(키보드로 입력)
- Scanner sc = new Scanner(System.in);

18. int data = sc.nextInt(); 를 설명하시오.
- 1)int타입의 data변수 선언
- 2)스캐너로 입력받은 값을 int로 변경
- 3)int로 변경한 값을 data변수에 저장

19. String[] s1 = {"감자", "고구마", "양파"}; 그림을 그리고, 참조형 변수 개수와 기본형 변수 개수를 구분하여 설명
- 참조형변수 : 4개, s1, s1[0], s1[1], s1[2]
- 기본형변수 : 8개, '감', '자', '고', '구', '마', '양', '파', s1.length

20. int[] s = {11, 22, 33};인 경우 s[0]의 의미, System.out.println(s[0]);의 의미, s[0] = 100의 의미
- s[0]은 s배열의 맨 처음에 생성된 저장공간의 변수이름
- System.out.println(s[0]);은 s[0]에 저장된 값을 출력
- s[0] = 100은 s배열의 첫번째항에 100을 대입

21. for (String x: s){
     System.out.println(x);
    }의 동작방식
- s라는 배열에 저장되어있는 모든값을 출력.
    
22. main메서드 안에 있는 
     for문 안에서 선언된 i의 생존범위
- for문 안에서 선언된 i의 경우 해당 for문의 안에서만 생존한다.
